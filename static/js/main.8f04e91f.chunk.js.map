{"version":3,"sources":["Components/ItemTable/Header/index.tsx","Components/ItemTable/Body/index.tsx","Components/ItemTable/Table/index.tsx","Components/ScatterChart/Grid/index.tsx","Components/ScatterChart/Item/index.tsx","Utils/Mouse.ts","Components/ScatterChart/Axis/index.tsx","Components/ScatterChart/index.tsx","Contexts/ItemContext.tsx","App.tsx","index.tsx"],"names":["Header","columns","map","column","style","width","label","dataKey","Body","uniqueKey","data","row","columnRender","props","render","defaultProps","Table","Grid","height","top","left","className","x1","x2","y1","y2","Item","x","y","id","svgRef","onPointDrag","useState","move","setmove","circleRef","useRef","textX","textY","mouseDown","useCallback","mouseUp","mouseMove","e","coordinates","event","canvas","rect","getBoundingClientRect","canvasWidth","baseVal","value","canvasHeight","elementRelativeX","clientX","elementRelativeY","clientY","getMouseCoordinates","current","useEffect","addEventListener","removeEventListener","ref","cx","cy","r","Axis","ScatterChart","items","onPointUpdate","item","xPos","parseFloat","toFixed","yPos","ItemContext","createContext","itemOnUpdate","newItem","remove","add","ItemContextProvider","children","JSON","parse","localStorage","getItem","setItems","setItem","stringify","Provider","prevState","currentItemIndex","findIndex","filter","concat","Date","getTime","App","useContext","renderNumberInput","key","type","step","onChange","currentTarget","Math","min","onClick","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8f04e91f.chunk.js","sourcesContent":["import { ReactElement } from 'react'\nimport HeaderTypes from '../Types/Header'\ninterface Props {\n  columns: HeaderTypes.Columns\n}\n\nfunction Header({ columns }: Props): ReactElement {\n  return (\n    <>\n      {/* <colgroup>\n        {\n          columns.map(column => <col style={{ width: column.width || 'auto' }} />)\n        }\n      </colgroup> */}\n      <thead>\n        <tr>\n          {\n            columns.map(column => <th style={{ width: column.width || 'auto' }}  key={column.dataKey}>{column.label}</th>)\n          }\n        </tr>\n      </thead>\n    </>\n  )\n}\n\nexport default Header\n","import React, { ReactElement } from 'react'\nimport BodyTypes from '../Types/Body'\nimport HeaderTypes from '../Types/Header'\ninterface Props {\n  uniqueKey: string;\n  data: BodyTypes.Rows;\n  columns: HeaderTypes.Columns\n}\n\nfunction Body({ uniqueKey, data, columns }: Props): ReactElement {\n  return (\n    <tbody>\n      {\n        data.map(row =>\n          <tr key={row[uniqueKey]}>\n            {\n              columns.map(column =>\n                <td key={column.dataKey}>\n                  {columnRender(column, row)}\n                </td>\n              )\n            }\n          </tr>\n        )\n      }\n    </tbody>\n  )\n}\nconst columnRender = (column: HeaderTypes.Column, props: BodyTypes.Row) => {\n  if (column.render) {\n    return (\n      column.render(props[column.dataKey], props, column.dataKey)\n    )\n  } else {\n    return props[column.dataKey]\n  }\n}\n\nBody.defaultProps = {\n  uniqueKey: 'key'\n}\nexport default Body\n","import { ReactElement } from 'react'\nimport Header from '../Header';\nimport HeaderTypes from '../Types/Header';\nimport BodyTypes from '../Types/Body';\nimport Body from '../Body';\ninterface Props {\n  data: BodyTypes.Rows;\n  columns: HeaderTypes.Columns;\n  uniqueKey?: string;\n}\n\nfunction Table({ columns, data, uniqueKey }: Props): ReactElement {\n  return (\n    <table>\n        <Header columns={columns} />\n        <Body data={data} columns={columns} uniqueKey={uniqueKey}/>\n    </table>\n  )\n}\n\nexport default Table\n","import { ReactElement } from 'react'\nimport './style.scss';\ninterface Props {\n  width: number;\n  height: number;\n}\n\nfunction Grid({ width, height }: Props): ReactElement {\n  const top = height / 2;\n  const left = width / 2;\n  return (\n    <>\n      <line className='scatter-grid' x1=\"0\" x2={width} y1={top} y2={top} />\n      <line className='scatter-grid' x1={left} x2={left} y1=\"0\" y2={height} />\n    </>\n  )\n}\n\n\nexport default Grid\n","import { ReactElement, useCallback, useEffect, useRef, useState } from 'react'\nimport { getMouseCoordinates } from '../../../Utils/Mouse';\nimport ItemTypes from '../Types/Item'\nimport './style.scss';\nfunction Item({ x, y, label, id, svgRef, onPointDrag }: ItemTypes.ItemProps): ReactElement {\n\n  const [move, setmove] = useState(false)\n  const circleRef = useRef<SVGCircleElement>(null);\n  const textX = x + 10, textY = y + 10;\n  const mouseDown = useCallback(() => {\n    setmove(true)\n  }, [])\n  const mouseUp = useCallback(() => {\n    setmove(false)\n  }, [])\n  const mouseMove = useCallback(\n    (e: MouseEvent) => {\n      if (!move) { return false; }\n      const coordinates = getMouseCoordinates(e, svgRef?.current);\n      onPointDrag(coordinates, { x, y, label, id })\n    },\n    [move, x, y, label, id, onPointDrag, svgRef]\n  )\n  useEffect(() => {\n    circleRef.current?.addEventListener('mousedown', mouseDown, true);\n    circleRef.current?.addEventListener('mouseup', mouseUp, true);\n    return () => {\n      circleRef.current?.removeEventListener('mousedown', mouseDown, true);\n      circleRef.current?.removeEventListener('mouseup', mouseUp, true);\n    };\n  }, [mouseDown, mouseUp])\n  useEffect(() => {\n    svgRef.current?.addEventListener('mousemove', mouseMove, true);\n    return () => {\n      svgRef.current?.removeEventListener('mousemove', mouseMove, true);\n    };\n  }, [move, mouseMove, svgRef])\n  return (\n    <g>\n      <circle ref={circleRef} className={`${move ? \"dragging\" : \"\"} scatter-chart__point`} cx={x} cy={y} r={6}>\n      </circle>\n      <text x={textX} y={textY}>{label}</text>\n    </g>\n  )\n}\n\nexport default Item;\n","export const getMouseCoordinates = (\n  event: MouseEvent,\n  canvas: SVGSVGElement | null\n) => {\n  if (!canvas) return { x: 0, y: 0 };\n  const rect = canvas.getBoundingClientRect();\n  const canvasWidth = canvas.width.baseVal.value;\n  const canvasHeight = canvas.height.baseVal.value;\n\n  const elementRelativeX = event.clientX - rect.left;\n  const elementRelativeY = event.clientY - rect.top;\n\n  const canvasRelativeX = (elementRelativeX * canvasWidth) / rect.width;\n  const canvasRelativeY = (elementRelativeY * canvasHeight) / rect.height;\n  return { x: canvasRelativeX, y: canvasRelativeY };\n};\n","import { ReactElement } from 'react'\nimport './style.scss';\nfunction Axis(): ReactElement {\n  return (\n    <div className='scatter-axis'>\n      <span className='axis-y'>Ability to execute &#8594;</span>\n      <span className='axis-x'>Completeness of vision &#8594;</span>\n      <span className='axis-Challangers'>Challangers</span>\n      <span className='axis-Leaders'>Leaders</span>\n      <span className='axis-NichePlayers'>Niche Players</span>\n      <span className='axis-Visionaries'>Visionaries</span>\n    </div>\n  )\n}\n\nexport default Axis\n","import { ReactElement, useRef } from 'react'\nimport Grid from './Grid';\nimport Item from './Item';\nimport ItemTypes from './Types/Item'\nimport './style.scss';\nimport Axis from './Axis';\ninterface Props extends ItemTypes.ItemActions {\n  items: ItemTypes.Items;\n  height: number;\n  width: number;\n}\n\nfunction ScatterChart({ items, height, width, onPointDrag }: Props): ReactElement {\n  const getX = (x: number) => x * width / 100\n  const getY = (y: number) => height - (y * height / 100)\n  const svgRef = useRef(null);\n  const onPointUpdate: ItemTypes.onPointDrag = (coordinates, item) => {\n    const xPos = parseFloat((coordinates.x / width  * 100).toFixed(2));\n    const yPos = parseFloat(((height - coordinates.y) / height * 100).toFixed(2));\n    onPointDrag({ x: xPos, y: yPos }, item)\n  }\n  return (\n    <div className='scatter-container'>\n      <svg ref={svgRef} className='scatter-chart' width={width} height={height}>\n        <Grid height={height} width={width} />\n        {items.map((item) =>\n          <Item key={item.id} onPointDrag={onPointUpdate} svgRef={svgRef} id={item.id} x={getX(item.x)} y={getY(item.y)} label={item.label} />\n        )}\n      </svg>\n      <Axis />\n    </div>\n  )\n}\nScatterChart.defaultProps = {\n  height: 400,\n  width: 400\n}\n\nexport default ScatterChart\n","import { createContext, ReactElement, useEffect, useState } from 'react';\nimport ItemTypes from '../Components/ScatterChart/Types/Item'\ninterface ItemContextType {\n  items: ItemTypes.Items;\n  itemOnUpdate: (id: number, newItem: ItemTypes.Item) => void;\n  remove: (id: number) => void;\n  add: () => void;\n}\n\n\ninterface ItemContextProviderProps {\n  children: ReactElement;\n}\n\nexport const ItemContext = createContext<ItemContextType>({\n  items: [],\n  itemOnUpdate: (id: number, newItem: ItemTypes.Item) => { },\n  remove: (id: number) => { },\n  add: () => { }\n});\n\nexport const ItemContextProvider = ({\n  children,\n}: ItemContextProviderProps) => {\n  const getIntleItems = () => {\n    let defaultItem = [{ x: 10, y: 10, label: '1', id: 0 }, { x: 40, y: 40, label: '2', id: 1 }, { x: 80, y: 80, label: '3', id: 2 }];\n    let localItem: ItemTypes.Items | undefined = JSON.parse(localStorage.getItem('Items')!)\n    const item = localItem || defaultItem;\n    return item;\n  }\n  const getNewItem = (): ItemTypes.Item => ({ x: 50, y: 50, label: 'New', id: new Date().getTime() })\n  const [items, setItems] = useState(getIntleItems());\n  const itemOnUpdate = (id: number, newItem: ItemTypes.Item) => {\n    setItems(prevState => {\n      const currentItemIndex = prevState.findIndex(item => item.id === id)\n      prevState[currentItemIndex] = newItem;\n      return [...prevState]\n    })\n  }\n  const remove = (id: number) => {\n    setItems(prevState => prevState.filter(item => item.id !== id))\n  }\n  const add = () => {\n    setItems(prevState => prevState.concat([getNewItem()]))\n  }\n\n  const updateLocalStorage = () => {\n    localStorage.setItem('Items', JSON.stringify(items))\n  }\n  useEffect(() => {\n    updateLocalStorage();\n  }, [items])\n\n  return (\n    <ItemContext.Provider\n      value={{\n        items,\n        itemOnUpdate,\n        remove,\n        add\n      }}\n    >\n      {children}\n    </ItemContext.Provider>\n  );\n};\n","import { useContext } from \"react\";\nimport { Table, HeaderTypes } from \"./Components/ItemTable\";\nimport ScatterChart from \"./Components/ScatterChart\";\nimport { ItemContext } from \"./Contexts/ItemContext\";\nimport ItemTypes from './Components/ScatterChart/Types/Item'\nimport './style/global.scss'\nfunction App() {\n  const { items, itemOnUpdate, remove, add } = useContext(ItemContext);\n  const renderInput: HeaderTypes.render<ItemTypes.Item> = (value: string | number, row, key: string) => <input value={value} onChange={(e) => itemOnUpdate(row.id, { ...row, [key]: e.currentTarget.value })} />;\n  const renderNumberInput: HeaderTypes.render<ItemTypes.Item> = (value: string | number, row, key: string) => <input type={\"number\"} step='0.01' value={value} \n  onChange={(e) => itemOnUpdate(row.id, { ...row, [key]: !e.currentTarget.value ? 0 :  Math.min(parseFloat(parseFloat(e.currentTarget.value).toFixed(2)), 100) })} />;\n  const removebtn: HeaderTypes.render<ItemTypes.Item> = (value, row) => <button onClick={() => remove(row.id)}>Delete</button>;\n  const columns: HeaderTypes.Columns = [\n    { label: 'Label', dataKey: 'label', render: renderInput, width: '50%' },\n    { label: 'Vision', dataKey: 'x', render: renderNumberInput, width: '20%' },\n    { label: 'Ability', dataKey: 'y', render: renderNumberInput, width: '20%' },\n    { label: 'Delete', dataKey: '', render: removebtn, width: '10%' }\n  ]\n  const onPointDrag:ItemTypes.onPointDrag = (coordinates, item) => {\n    itemOnUpdate(item.id, {\n      ...item,\n      x: coordinates.x,\n      y: coordinates.y\n    })\n  }\n  return (\n    <div className=\"App\">\n      <ScatterChart\n        items={items}\n        onPointDrag={onPointDrag}\n      />\n      <div className=\"scatter-table\">\n        <button onClick={() => add()}>Add</button>\n        <Table data={items} columns={columns} uniqueKey={\"id\"} />\n      </div>\n    </div>\n  );\n}\n\n\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { ItemContextProvider } from './Contexts/ItemContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ItemContextProvider>\n      <App />\n    </ItemContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}